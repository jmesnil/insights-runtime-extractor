FROM registry.ci.openshift.org/ocp/4.18:base-rhel9 AS rust-builder
ARG TARGETARCH

ENV RUST_TOOLCHAIN=1.81.0

RUN dnf update -y && dnf -y install \
    gcc make wget

ENV PATH="/root/.cargo/bin:${PATH}"
RUN curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain ${RUST_TOOLCHAIN} -y
RUN if [ "$TARGETARCH" == "arm64" ]; then rustup target add aarch64-unknown-linux-musl; fi
RUN if [ "$TARGETARCH" == "amd64" ]; then rustup target add x86_64-unknown-linux-musl; fi

WORKDIR /workspace/extractor
COPY extractor .
RUN make TARGETARCH=${TARGETARCH}

FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.22-openshift-4.18 AS go-builder

WORKDIR /workspace/fingerprints
COPY fingerprints .
ARG GO_LDFLAGS=""
RUN CGO_ENABLED=0 GOOS=linux GO111MODULE=on make build

FROM registry.ci.openshift.org/ocp/4.18:base-rhel9

RUN dnf update -y && dnf -y install \
    cri-tools

COPY --from=rust-builder /workspace/extractor/config/ /
COPY --from=rust-builder /workspace/extractor/target/*/release/extractor_server /extractor_server
COPY --from=rust-builder /workspace/extractor/target/*/release/coordinator /coordinator
# Copy fingerprints written in Go
COPY --from=go-builder --chmod=755 /workspace/fingerprints/bin/fpr_* /
ENTRYPOINT [ "/extractor_server" ]